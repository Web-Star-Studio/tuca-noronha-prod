/**
 * Script para debugar pagamento de reserva espec√≠fica
 * Execute: bun run debug:booking -- <bookingId>
 */

import { ConvexHttpClient } from "convex/browser";

const CONVEX_URL = process.env.NEXT_PUBLIC_CONVEX_URL || "";
const client = new ConvexHttpClient(CONVEX_URL);

const bookingId = process.argv[2];

if (!bookingId) {
  console.error("‚ùå Por favor forne√ßa o ID da reserva:");
  console.error("   bun run debug:booking -- <bookingId>");
  process.exit(1);
}

console.log("üîç Debugando reserva:", bookingId);
console.log("üìç Convex URL:", CONVEX_URL);
console.log();

async function debugBooking() {
  try {
    // 1. Verificar se a reserva existe
    console.log("1Ô∏è‚É£ Buscando reserva na base de dados...");
    
    // Tentar em todas as tabelas de booking
    const tables = [
      "activityBookings",
      "eventBookings", 
      "vehicleBookings",
      "restaurantReservations"
    ];
    
    let booking = null;
    let bookingType = null;
    
    for (const table of tables) {
      try {
        // Nota: isso requer uma query p√∫blica ou voc√™ precisa adicionar uma
        console.log(`   Tentando em ${table}...`);
        // booking = await client.query(api.domains.bookings.queries.getBookingById, { 
        //   bookingId,
        //   bookingType: table.replace("Bookings", "").replace("Reservations", "")
        // });
        // if (booking) {
        //   bookingType = table;
        //   break;
        // }
      } catch (error) {
        // Tabela n√£o tem essa reserva, continuar
      }
    }
    
    // 2. Verificar webhooks relacionados
    console.log("\n2Ô∏è‚É£ Verificando webhooks do Mercado Pago...");
    console.log("   üí° Acesse o Convex Dashboard para ver logs:");
    console.log("   https://dashboard.convex.dev/");
    console.log();
    console.log("   Filtre por:");
    console.log(`   - "bookingId" e procure por "${bookingId}"`);
    console.log(`   - "[MP] Processing payment notification"`);
    console.log();
    
    // 3. Instru√ß√µes para verificar no Mercado Pago
    console.log("3Ô∏è‚É£ Verificar no Dashboard do Mercado Pago:");
    console.log("   https://www.mercadopago.com.br/developers/panel");
    console.log();
    console.log("   Passos:");
    console.log("   a) V√° em 'Suas integra√ß√µes' ‚Üí Sua aplica√ß√£o");
    console.log("   b) V√° em 'Webhooks'");
    console.log("   c) Veja o hist√≥rico de notifica√ß√µes enviadas");
    console.log("   d) Verifique se h√° erros nas tentativas de envio");
    console.log();
    
    // 4. Verificar configura√ß√£o do webhook
    console.log("4Ô∏è‚É£ Verificar URL do Webhook:");
    console.log("   URL esperada: https://wonderful-salmon-48.convex.site/mercadopago/webhook");
    console.log();
    console.log("   Teste manualmente:");
    console.log("   curl https://wonderful-salmon-48.convex.site/mercadopago/webhook");
    console.log("   Deve retornar: 'Webhook endpoint is ready'");
    console.log();
    
    // 5. Pr√≥ximos passos
    console.log("5Ô∏è‚É£ Pr√≥ximos Passos:");
    console.log();
    console.log("   ‚úÖ Se webhook foi recebido mas reserva n√£o atualizou:");
    console.log("      ‚Üí Problema nos metadados (bookingId n√£o est√° sendo enviado)");
    console.log("      ‚Üí Verificar logs do Convex Dashboard");
    console.log();
    console.log("   ‚ùå Se webhook N√ÉO foi recebido:");
    console.log("      ‚Üí URL do webhook est√° incorreta no MP");
    console.log("      ‚Üí Reconfigurar no painel do Mercado Pago");
    console.log();
    console.log("   üîß Para for√ßar atualiza√ß√£o manual:");
    console.log("      ‚Üí Acesse o Convex Dashboard");
    console.log("      ‚Üí V√° em 'Functions' ‚Üí 'mercadoPago' ‚Üí 'mutations'");
    console.log("      ‚Üí Execute 'updateBookingPaymentStatus' manualmente");
    console.log();
    
    // 6. Informa√ß√µes √∫teis
    console.log("6Ô∏è‚É£ Informa√ß√µes √öteis:");
    console.log();
    console.log("   üì¶ Metadados que o webhook procura:");
    console.log("      - payment.metadata.bookingId");
    console.log("      - payment.metadata.booking_id");
    console.log("      - payment.external_reference");
    console.log();
    console.log("   üìã Status do pagamento esperados:");
    console.log("      - approved: Pagamento aprovado ‚Üí Atualiza reserva");
    console.log("      - pending: Pagamento pendente");
    console.log("      - rejected: Pagamento rejeitado");
    console.log();

  } catch (error) {
    console.error("‚ùå Erro:", error);
  }
}

debugBooking();
